#!/bin/bash
#
# tag and publish the release
#
# usage: ./lib/build/tag
#
set -euo pipefail
IFS=$'\n\t'

# check that changelog file is tracked
>/dev/null git ls-files --error-unmatch CHANGELOG.md

# ## [0.0.13] - 2018-03-20

CHANGELOG="$(
  grep -m 1 -e '^## \[' CHANGELOG.md \
  | sed -n -e 's/^## \[\([0-9.]*\)\].*$/\1/p'
)"

# process --go flag
GO=false
if [[ "--go" = "${1-}" ]]; then
  GO=true
  shift
fi

TAG="${1-${CHANGELOG}}"

echo "tag and publish: ${TAG}"
echo "  branch: $(git rev-parse --abbrev-ref HEAD)"
echo "  commit: $(git log --oneline -1)"

# check not unreleased (not digits and dots, no semver checker here)
if [[ "${TAG}" = "" ]]; then
  >&2 echo "fatal: not a version tag '${TAG}' - [unreleased] ?"
  exit 1
fi

# check it is linked (links are at the bottom of the CHANGELOG.md)
# [0.0.35]: https://github.com/ktomk/pipelines/releases/tag/0.0.35
if ! grep -qP '^\Q['"${TAG}"']\E: https://' CHANGELOG.md; then
  >&2 echo "fatal: no link for version tag '${TAG}'"
  >&2 echo "       [${TAG}]: https://github.com/ktomk/pipelines/releases/tag/${TAG}"
  sed -i -e '$i'"[${TAG}]: https://github.com/ktomk/pipelines/releases/tag/${TAG}" CHANGELOG.md
  exit 1
fi

# check that changelog file is not changed (committed)
if ! git diff --exit-code CHANGELOG.md; then
  >&2 echo "fatal: CHANGELOG.md has uncommitted changes"
  exit 1
fi

# check that help section in read-me is up to date (and read-me committed)
php -f lib/build/usage.php
if ! git diff --exit-code README.md; then
  >&2 echo "fatal: README.md has uncommitted changes"
  exit 1
fi

# no push by default
if [[ "${GO}" != "true" ]]; then
  echo "would tag & push now, but no --go, exiting."
  exit
fi

# run-of-the-mill

git tag -a "${TAG}" -m "${TAG}"

echo "pushing tag ${TAG}"
git push origin "${TAG}"

git checkout master && git merge --ff-only "${TAG}"

echo "pushing master"
git push origin master:master

git checkout -
