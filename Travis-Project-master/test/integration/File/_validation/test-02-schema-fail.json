{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "",
    "title": "Bitbucket Pipelines Schema Test Suite",
    "type": "object",
    "properties": {
        "pipelines": {
            "$ref": "#/definitions/pipelines"
        }
    },
    "additionalProperties": false,
    "definitions": {
        "pipelines": {
            "type": "object",
            "title": "Build pipelines",
            "description": "The start of your pipelines definitions. Under this keyword you must define your build pipelines using at least one of the following:\n\n  * default (for all branches that don't match any of the following)\n  * branches (Git and Mercurial)\n  * tags (Git)\n  * bookmarks (Mercurial)",
            "properties": {
                "branches": {
                    "type": "object",
                    "title": "Branch-specific build pipelines",
                    "description": "Defines a section for all branch-specific build pipelines. The names or expressions in this section are matched against:\n\n  * branches in your Git repository\n  * named branches in your Mercurial repository\n\nYou can use glob patterns for handling the branch names.",
                    "additionalProperties": {
                        "$ref": "#/definitions/steps"
                    },
                    "minProperties": 1
                },
                "bookmarks": {
                    "type": "object",
                    "title": "Bookmark-specific build pipelines (to be used in Mercurial repositories)",
                    "description": "Defines all bookmark-specific build pipelines. \n\nThe names or expressions in this section are matched against bookmarks in your Mercurial repository. \n\nYou can use glob patterns for handling the tag names.",
                    "additionalProperties": {
                        "$ref": "#/definitions/steps"
                    },
                    "minProperties": 1
                },
                "custom": {
                    "type": "object",
                    "title": "Manually triggered build pipelines",
                    "description": "Defines pipelines that can only be triggered manually or scheduled from the Bitbucket Cloud interface.",
                    "additionalProperties": {
                        "$ref": "#/definitions/stepsWithVariables"
                    },
                    "minProperties": 1
                },
                "tags": {
                    "type": "object",
                    "title": "Tag-specific build pipelines",
                    "description": "Defines all tag-specific build pipelines. \n\nThe names or expressions in this section are matched against tags and annotated tags in your Git repository. \n\nYou can use glob patterns for handling the tag names.",
                    "additionalProperties": {
                        "$ref": "#/definitions/steps"
                    },
                    "minProperties": 1
                },
                "pull-requests": {
                    "type": "object",
                    "title": "Pull-request-specific build pipelines",
                    "description": "A special pipeline which only runs on pull requests. Pull-requests has the same level of indentation as branches.\n\nThis type of pipeline runs a little differently to other pipelines. When it's triggered, we'll merge the destination branch into your working branch before it runs. If the merge fails we will stop the pipeline.",
                    "additionalProperties": {
                        "$ref": "#/definitions/steps"
                    },
                    "minProperties": 1
                },
                "default": {
                    "title": "Default build pipeline for branches",
                    "description": "The default pipeline runs on every push to the repository, unless a branch-specific pipeline is defined. \nYou can define a branch pipeline in the branches section.\n\nNote: The default pipeline doesn't run on tags or bookmarks.",
                    "$ref": "#/definitions/steps"
                }
            },
            "additionalProperties": false
        },
        "stepsWithVariables": {
            "type": "array",
            "items": {
                "anyOf": [
                    {
                        "type": "object",
                        "properties": {
                            "variables": {
                                "type": "array",
                                "description": "List of variables for the custom pipeline",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "Name of a variable for the custom pipeline",
                                            "minLength": 1
                                        }
                                    },
                                    "additionalProperties": false
                                },
                                "minItems": 1
                            }
                        },
                        "additionalProperties": false
                    },
                    {
                        "type": "object",
                        "properties": {
                            "step": {
                                "$ref": "#/definitions/step"
                            }
                        },
                        "additionalProperties": false
                    },
                    {
                        "type": "object",
                        "properties": {
                            "parallel": {
                                "$ref": "#/definitions/parallel"
                            }
                        },
                        "additionalProperties": false
                    }
                ]
            },
            "minItems": 1
        },
        "steps": {
            "type": "array",
            "items": {
                "anyOf": [
                    {
                        "type": "object",
                        "properties": {
                            "step": {
                                "$ref": "#/definitions/step"
                            }
                        },
                        "additionalProperties": false
                    },
                    {
                        "type": "object",
                        "properties": {
                            "parallel": {
                                "$ref": "#/definitions/parallel"
                            }
                        },
                        "additionalProperties": false
                    }
                ]
            },
            "minItems": 1
        },
        "step": {
            "type": "object",
            "title": "Build execution unit",
            "description": "Define s a build execution unit. \n\nSteps are executed in the order that they appear in the bitbucket-pipelines.yml file. \nYou can use up to 10 steps in a pipeline.",
            "properties": {
                "name": {
                    "type": "string",
                    "title": "Name of the step",
                    "description": "You can add a name to a step to make displays and reports easier to read and understand.",
                    "minLength": 1
                },
                "image": {
                    "$ref": "#/definitions/image"
                },
                "max-time": {
                    "$ref": "#/definitions/max-time"
                },
                "size": {
                    "$ref": "#/definitions/size"
                },
                "script": {
                    "$ref": "#/definitions/script",
                    "description": "Commands to execute in the step"
                },
                "after-script": {
                    "$ref": "#/definitions/script",
                    "title": "Commands to execute after the step succeeds or fails",
                    "description": "Commands inside an after-script section will run when the step succeeds or fails. This could be useful for clean up commands, test coverage, notifications, or rollbacks you might want to run, especially if your after-script uses the value of BITBUCKET_EXIT_CODE.\n\nNote: If any commands in the after-script section fail:\n\n* we won't run any more commands in that section\n\n* it will not effect the reported status of the step."
                },
                "artifacts": {
                    "type": "array",
                    "title": "Files produced by a step to share with a following step",
                    "description": "Defines files to be shared from one step to a later step in your pipeline. Artifacts can be defined using glob patterns.",
                    "items": {
                        "type": "string",
                        "description": "Glob pattern for the path to the artifacts",
                        "minLength": 1
                    },
                    "minItems": 1
                },
                "caches": {
                    "type": "array",
                    "description": "Caches enabled for the step",
                    "items": {
                        "type": "string",
                        "description": "Name of the cache",
                        "minLength": 1
                    },
                    "minItems": 1
                },
                "services": {
                    "type": "array",
                    "description": "Services enabled for the step",
                    "items": {
                        "type": "string",
                        "description": "Name of the service",
                        "minLength": 1
                    },
                    "minItems": 1,
                    "maxItems": 5
                },
                "trigger": {
                    "type": "string",
                    "title": "Step trigger type",
                    "description": "Specifies whether a step will run automatically or only after someone manually triggers it. You can define the trigger type as manual or automatic. If the trigger type is not defined, the step defaults to running automatically. The first step cannot be manual. If you want to have a whole pipeline only run from a manual trigger then use a custom pipeline.",
                    "enum": ["automatic", "manual"],
                    "default": "automatic"
                },
                "deployment": {
                    "type": "string",
                    "title": "Type of environment for the deployment step",
                    "description": "Sets the type of environment for your deployment step, used in the Deployments dashboard.",
                    "minLength": 1
                }
            },
            "required": ["script"],
            "additionalProperties": false
        },
        "parallel": {
            "type": "array",
            "title": "Set of steps to run concurrently",
            "description": "Parallel steps enable you to build and test faster, by running a set of steps at the same time.\n\nThe total number of build minutes used by a pipeline will not change if you make the steps parallel, but you'll be able to see the results sooner.\n\nThere is a limit of 10 for the total number of steps you can run in a pipeline, regardless of whether they are running in parallel or serial.",
            "items": {
                "type": "object",
                "properties": {
                    "step": {
                        "$ref": "#/definitions/step"
                    }
                },
                "additionalProperties": false
            },
            "minItems": 2
        },
        "script": {
            "description": "Contains a list of commands that are executed in sequence. \n\nScripts are executed in the order in which they appear in a step. \n\nWe recommend that you move large scripts to a separate script file and call it from the bitbucket-pipelines.yml.",
            "type": "array",
            "items": {
                "oneOf": [
                    {
                        "type": "string",
                        "description": "Command to execute",
                        "minLength": 1
                    },
                    {
                        "$ref": "#/definitions/pipe"
                    }
                ]
            },
            "minItems": 1
        },
        "pipe": {
            "type": "object",
            "title": "Pipe to execute",
            "description": "Pipes make complex tasks easier, by doing a lot of the work behind the scenes.\nThis means you can just select which pipe you want to use, and supply the necessary variables.\nYou can look at the repository for the pipe to see what commands it is running.\n\nLearn more about pipes: https://confluence.atlassian.com/bitbucket/pipes-958765631.html",
            "properties": {
                "pipe": {
                    "type": "string",
                    "title": "Pipe identifier",
                    "description": "Pipes make complex tasks easier, by doing a lot of the work behind the scenes.\nThis means you can just select which pipe you want to use, and supply the necessary variables.\nYou can look at the repository for the pipe to see what commands it is running.\n\nLearn more about pipes: https://confluence.atlassian.com/bitbucket/pipes-958765631.html",
                    "minLength": 1
                },
                "variables": {
                    "type": "object",
                    "description": "Environment variables passed to the pipe",
                    "additionalProperties": {
                        "type": "string",
                        "description": "Environment variable value",
                        "minLength": 1
                    },
                    "minProperties": 1
                }
            },
            "required": ["pipe"],
            "additionalProperties": false
        },

        "simpleImage": {
            "type": "string",
            "title": "Name of the Docker image which may or may not include registry URL, tag, and digest value",
            "description": "The Docker container to run your builds.\n\nsee: https://confluence.atlassian.com/x/kYU5Lw for details",
            "minLength": 1
        },
        "imageWithCustomUser": {
            "type": "object",
            "properties": {
                "name": {
                    "$ref": "#/definitions/simpleImage"
                },
                "run-as-user": {
                    "$ref": "#/definitions/runAsUser"
                }
            },
            "required": ["name"],
            "additionalProperties": false
        },
        "privateImage": {
            "type": "object",
            "description": "A docker image hosted in a private repository",
            "properties": {
                "name": {
                    "$ref": "#/definitions/simpleImage"
                },
                "username": {
                    "type": "string",
                    "description": "Username to use to fetch the Docker image",
                    "minLength": 1
                },
                "password": {
                    "type": "string",
                    "description": "Password to use to fetch the Docker image",
                    "minLength": 1
                },
                "email": {
                    "type": "string",
                    "description": "Email to use to fetch the Docker image",
                    "format": "email",
                    "minLength": 1
                },
                "run-as-user": {
                    "$ref": "#/definitions/runAsUser"
                }
            },
            "required": ["name", "username", "password"],
            "additionalProperties": false
        },
        "awsImage": {
            "type": "object",
            "description": "A docker image hosted by AWS ECR",
            "properties": {
                "name": {
                    "$ref": "#/definitions/simpleImage"
                },
                "aws": {
                    "type": "object",
                    "description": "AWS credentials",
                    "properties": {
                        "access-key": {
                            "type": "string",
                            "description": "AWS Access Key",
                            "minLength": 1
                        },
                        "secret-key": {
                            "type": "string",
                            "description": "AWS Secret Key",
                            "minLength": 1
                        }
                    },
                    "required": ["access-key", "secret-key"],
                    "additionalProperties": false
                },
                "run-as-user": {
                    "$ref": "#/definitions/runAsUser"
                }
            },
            "required": ["name", "aws"],
            "additionalProperties": false
        },
        "image": {
            "oneOf": [
                {
                    "$ref": "#/definitions/simpleImage"
                },
                {
                    "$ref": "#/definitions/imageWithCustomUser"
                },
                {
                    "$ref": "#/definitions/privateImage"
                },
                {
                    "$ref": "#/definitions/awsImage"
                }
            ]
        },

        "runAsUser": {
            "type": "integer",
            "title": "The UID of a user in the docker image to run as",
            "description": "Overrides image's default user, specified user UID must be an existing user in the image with a valid home directory"
        },
        "max-time": {
            "type": "integer",
            "description": "Maximum amount of minutes a step can execute",
            "minimum": 1,
            "maximum": 120,
            "default": 120
        },
        "size": {
            "type": "string",
            "title": "Multiplier of the resources allocated to a pipeline step",
            "description": "You can allocate additional resources to a step, or to the whole pipeline. \nBy specifying the size of 2x, you'll have double the resources available (eg. 4GB memory → 8GB memory).\n\nAt this time, valid sizes are 1x and 2x.",
            "enum": ["1x", "2x"],
            "default": "1x"
        }
    }
}
